[vars]
qFDS = ID
fld = new_name

# ************************************************************
[dbase]
# ************************************************************
add    = CREATE DATABASE <!VAR:dbs!>;
drop   = DROP DATABASE <!VAR:dbs!>;
backup = BACKUP DATABASE <!VAR:dbs!> TO DISK = '<!VAR:dest!>';
rename = RENAME DATABASE <!VAR:dbs!> TO <!VAR:dest!>;

# ************************************************************
[table]
# ************************************************************
add = CREATE TABLE IF NOT EXISTS `<!VAR:tab!>` ( _
  `ID` int(11) UNSIGNED NOT NULL AUTO_INCREMENT, _
  PRIMARY KEY (`ID`) _
) AUTO_INCREMENT=0;

rename = RENAME TABLE `<!VAR:tab!>` TO `<!VAR:new!>`;
copy   = CREATE TABLE IF NOT EXISTS `<!VAR:new!>` SELECT * FROM `<!VAR:tab!>`;
sort   = ALTER TABLE `<!VAR:tab!>` ORDER BY `<!VAR:order!>` <!VAR:sort!>;
trunc  = TRUNCATE `<!VAR:tab!>`;
drop   = DROP TABLE IF EXISTS `<!VAR:tab!>`;

# ************************************************************
[field]
# ************************************************************
add    = ALTER TABLE `<!VAR:tab!>` ADD <!VAR:fld!> <!VAR:def!>;
rename = ALTER TABLE `<!VAR:tab!>` RENAME <!VAR:fld!> TO `<!VAR:new!>`;
modify = ALTER TABLE `<!VAR:tab!>` CHANGE <!VAR:fld!> <!VAR:fld!> <!VAR:def!>;
move   = ALTER TABLE `<!VAR:tab!>` MODIFY <!VAR:fld!> AFTER `<!VAR:after!>`;
drop   = ALTER TABLE `<!VAR:tab!>` DROP <!VAR:fld!>;

# ************************************************************
# copy field to another column
# ************************************************************
copy = UPDATE `<!VAR:tab!>` SET `<!VAR:new!>`=<!VAR:fld!>;

# merge contents of two fields into one
merge.std = _
	UPDATE `<!VAR:tab!>` SET `<!VAR:new!>`=<!VAR:fld!> WHERE ISNULL(`<!VAR:new!>`); _
	UPDATE `<!VAR:tab!>` SET <!VAR:fld!>=NULL WHERE (<!VAR:fld!>=`<!VAR:new!>`);

# merge when destination is memo field
merge.text = _
	UPDATE `<!VAR:tab!>` SET `<!VAR:new!>`=NULL WHERE LENGTH(`<!VAR:new!>`) < 1; _
	UPDATE `<!VAR:tab!>` SET <!VAR:fld!>=NULL WHERE LENGTH(<!VAR:fld!>) < 1; _
	UPDATE `<!VAR:tab!>` SET `<!VAR:new!>`=CONCAT(`<!VAR:new!>`, "<!VAR:SEP!>") WHERE NOT ISNULL(`<!VAR:new!>`) AND NOT ISNULL(<!VAR:fld!>); _
	UPDATE `<!VAR:tab!>` SET `<!VAR:new!>`=CONCAT(`<!VAR:new!>`, <!VAR:fld!>) WHERE NOT ISNULL(<!VAR:fld!>); _
	UPDATE `<!VAR:tab!>` SET <!VAR:fld!>=NULL;

# ************************************************************
[ftypes] # TYPE DEFs
# ************************************************************
key = `ID` INT(11) UNSIGNED NOT NULL AUTO_INCREMENT

var = VARCHAR(<!VAR:size!>) <!VAR:null!> DEFAULT '<!VAR:std!>'
mem = TEXT NULL
txt = TEXT NULL

int = INT(11) NULL DEFAULT 0
dec = DECIMAL(12,2) NULL DEFAULT 0
dbl = DOUBLE(14,5) NULL DEFAULT 0

dat = DATE <!VAR:null!> DEFAULT NULL
dnt = DATETIME <!VAR:null!>
tim = TIME NULL
cur = TIMESTAMP DEFAULT CURRENT_TIMESTAMP

# ************************************************************
own = `owner` VARCHAR(15)
md5 = `md5` VARCHAR(32)
lnk = `link` VARCHAR(150)
eml = `email` VARCHAR(100)

# ************************************************************
[index]
# ************************************************************
create = ALTER TABLE `<!VAR:tab!>` ADD UNIQUE <!VAR:qFDS!> (<!VAR:qFDS!>);

# ************************************************************
# clean, keep newest
# ************************************************************
[clean]
keep = DROP TABLE IF EXISTS `dummy`;
	_
	CREATE TABLE `dummy`
	SELECT MAX(ID) AS UID FROM `<!VAR:tab!>` GROUP BY <!VAR:qFDS!>; _
	_
	DELETE FROM `<!VAR:tab!>` WHERE ID NOT IN ( _
		SELECT UID FROM `dummy`
	); _
	_
	DROP TABLE IF EXISTS `dummy`;
